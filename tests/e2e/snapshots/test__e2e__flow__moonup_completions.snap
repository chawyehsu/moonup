---
source: tests/e2e/flow.rs
info:
  program: moonup
  args:
    - completions
    - zsh
---
success: true
exit_code: 0
----- stdout -----
#compdef moonup

autoload -U is-at-least

_moonup() {
    typeset -A opt_args
    typeset -a _arguments_options
    local ret=1

    if is-at-least 5.2; then
        _arguments_options=(-s -S -C)
    else
        _arguments_options=(-s -C)
    fi

    local context curcontext="$curcontext" state line
    _arguments "${_arguments_options[@]}" : \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
'-V[Print version]' \
'--version[Print version]' \
":: :_moonup_commands" \
"*::: :->moonup" \
&& ret=0
    case $state in
    (moonup)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:moonup-command-$line[1]:"
        case $line[1] in
            (completions)
_arguments "${_arguments_options[@]}" : \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':shell -- The shell type:(bash elvish fish powershell zsh)' \
&& ret=0
;;
(default)
_arguments "${_arguments_options[@]}" : \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
'::toolchain -- Toolchain version tag or channel name \[latest, nightly, bleeding\]:_default' \
&& ret=0
;;
(install)
_arguments "${_arguments_options[@]}" : \
'--list-available[List available toolchains]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
'::toolchain -- Toolchain version tag or channel name \[latest, nightly, bleeding\]:_default' \
&& ret=0
;;
(i)
_arguments "${_arguments_options[@]}" : \
'--list-available[List available toolchains]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
'::toolchain -- Toolchain version tag or channel name \[latest, nightly, bleeding\]:_default' \
&& ret=0
;;
(list)
_arguments "${_arguments_options[@]}" : \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(ls)
_arguments "${_arguments_options[@]}" : \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(pin)
_arguments "${_arguments_options[@]}" : \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
'::toolchain -- Toolchain version tag or channel name \[latest, nightly, bleeding\]:_default' \
&& ret=0
;;
(run)
_arguments "${_arguments_options[@]}" : \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':toolchain -- The toolchain to use for running the command:_default' \
'*::command -- The command to run, with arguments if any:_cmdambivalent' \
&& ret=0
;;
(x)
_arguments "${_arguments_options[@]}" : \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':toolchain -- The toolchain to use for running the command:_default' \
'*::command -- The command to run, with arguments if any:_cmdambivalent' \
&& ret=0
;;
(self-update)
_arguments "${_arguments_options[@]}" : \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(uninstall)
_arguments "${_arguments_options[@]}" : \
'--clear[Invalidate and remove all cached downloads]' \
'--keep-cache[Keep the cached downloads of the toolchain]' \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help (see more with '\''--help'\'')]' \
'--help[Print help (see more with '\''--help'\'')]' \
'*::toolchain -- The toolchain(s) to uninstall:_default' \
&& ret=0
;;
(update)
_arguments "${_arguments_options[@]}" : \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(u)
_arguments "${_arguments_options[@]}" : \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(which)
_arguments "${_arguments_options[@]}" : \
'*-v[Increase logging verbosity]' \
'*--verbose[Increase logging verbosity]' \
'(-v --verbose)*-q[Decrease logging verbosity]' \
'(-v --verbose)*--quiet[Decrease logging verbosity]' \
'-h[Print help]' \
'--help[Print help]' \
':command -- The command to inspect:_default' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
":: :_moonup__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:moonup-help-command-$line[1]:"
        case $line[1] in
            (completions)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(default)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(install)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(list)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(pin)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(run)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(self-update)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(uninstall)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(update)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(which)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
}

(( $+functions[_moonup_commands] )) ||
_moonup_commands() {
    local commands; commands=(
'completions:Generate shell completions' \
'default:Set the default toolchain' \
'install:Install or update a MoonBit toolchain' \
'i:Install or update a MoonBit toolchain' \
'list:List installed and active toolchains' \
'ls:List installed and active toolchains' \
'pin:Pin the MoonBit toolchain to a specific version' \
'run:Run a command with a specific toolchain' \
'x:Run a command with a specific toolchain' \
'self-update:Update Moonup to the latest version' \
'uninstall:Uninstall a MoonBit toolchain' \
'update:Update MoonBit toolchains' \
'u:Update MoonBit toolchains' \
'which:Show the actual binary that will be run for a given command' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'moonup commands' commands "$@"
}
(( $+functions[_moonup__completions_commands] )) ||
_moonup__completions_commands() {
    local commands; commands=()
    _describe -t commands 'moonup completions commands' commands "$@"
}
(( $+functions[_moonup__default_commands] )) ||
_moonup__default_commands() {
    local commands; commands=()
    _describe -t commands 'moonup default commands' commands "$@"
}
(( $+functions[_moonup__help_commands] )) ||
_moonup__help_commands() {
    local commands; commands=(
'completions:Generate shell completions' \
'default:Set the default toolchain' \
'install:Install or update a MoonBit toolchain' \
'list:List installed and active toolchains' \
'pin:Pin the MoonBit toolchain to a specific version' \
'run:Run a command with a specific toolchain' \
'self-update:Update Moonup to the latest version' \
'uninstall:Uninstall a MoonBit toolchain' \
'update:Update MoonBit toolchains' \
'which:Show the actual binary that will be run for a given command' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'moonup help commands' commands "$@"
}
(( $+functions[_moonup__help__completions_commands] )) ||
_moonup__help__completions_commands() {
    local commands; commands=()
    _describe -t commands 'moonup help completions commands' commands "$@"
}
(( $+functions[_moonup__help__default_commands] )) ||
_moonup__help__default_commands() {
    local commands; commands=()
    _describe -t commands 'moonup help default commands' commands "$@"
}
(( $+functions[_moonup__help__help_commands] )) ||
_moonup__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'moonup help help commands' commands "$@"
}
(( $+functions[_moonup__help__install_commands] )) ||
_moonup__help__install_commands() {
    local commands; commands=()
    _describe -t commands 'moonup help install commands' commands "$@"
}
(( $+functions[_moonup__help__list_commands] )) ||
_moonup__help__list_commands() {
    local commands; commands=()
    _describe -t commands 'moonup help list commands' commands "$@"
}
(( $+functions[_moonup__help__pin_commands] )) ||
_moonup__help__pin_commands() {
    local commands; commands=()
    _describe -t commands 'moonup help pin commands' commands "$@"
}
(( $+functions[_moonup__help__run_commands] )) ||
_moonup__help__run_commands() {
    local commands; commands=()
    _describe -t commands 'moonup help run commands' commands "$@"
}
(( $+functions[_moonup__help__self-update_commands] )) ||
_moonup__help__self-update_commands() {
    local commands; commands=()
    _describe -t commands 'moonup help self-update commands' commands "$@"
}
(( $+functions[_moonup__help__uninstall_commands] )) ||
_moonup__help__uninstall_commands() {
    local commands; commands=()
    _describe -t commands 'moonup help uninstall commands' commands "$@"
}
(( $+functions[_moonup__help__update_commands] )) ||
_moonup__help__update_commands() {
    local commands; commands=()
    _describe -t commands 'moonup help update commands' commands "$@"
}
(( $+functions[_moonup__help__which_commands] )) ||
_moonup__help__which_commands() {
    local commands; commands=()
    _describe -t commands 'moonup help which commands' commands "$@"
}
(( $+functions[_moonup__install_commands] )) ||
_moonup__install_commands() {
    local commands; commands=()
    _describe -t commands 'moonup install commands' commands "$@"
}
(( $+functions[_moonup__list_commands] )) ||
_moonup__list_commands() {
    local commands; commands=()
    _describe -t commands 'moonup list commands' commands "$@"
}
(( $+functions[_moonup__pin_commands] )) ||
_moonup__pin_commands() {
    local commands; commands=()
    _describe -t commands 'moonup pin commands' commands "$@"
}
(( $+functions[_moonup__run_commands] )) ||
_moonup__run_commands() {
    local commands; commands=()
    _describe -t commands 'moonup run commands' commands "$@"
}
(( $+functions[_moonup__self-update_commands] )) ||
_moonup__self-update_commands() {
    local commands; commands=()
    _describe -t commands 'moonup self-update commands' commands "$@"
}
(( $+functions[_moonup__uninstall_commands] )) ||
_moonup__uninstall_commands() {
    local commands; commands=()
    _describe -t commands 'moonup uninstall commands' commands "$@"
}
(( $+functions[_moonup__update_commands] )) ||
_moonup__update_commands() {
    local commands; commands=()
    _describe -t commands 'moonup update commands' commands "$@"
}
(( $+functions[_moonup__which_commands] )) ||
_moonup__which_commands() {
    local commands; commands=()
    _describe -t commands 'moonup which commands' commands "$@"
}

if [ "$funcstack[1]" = "_moonup" ]; then
    _moonup "$@"
else
    compdef _moonup moonup
fi


----- stderr -----
